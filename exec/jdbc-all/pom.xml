<?xml version="1.0"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.drill.exec</groupId>
    <artifactId>exec-parent</artifactId>
    <version>1.2.0-SNAPSHOT</version>
  </parent>

  <artifactId>drill-jdbc-all</artifactId>
  <name>JDBC JAR with all dependencies</name>

  <dependencies>
  
    <!-- start parent dependencies -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-handler</artifactId>
      <version>4.0.27.Final</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>14.0.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${dep.slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${dep.slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${dep.slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${dep.slf4j.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.googlecode.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>1.3</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${dep.junit.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>1.9.5</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>de.huxhorn.lilith</groupId>
      <artifactId>de.huxhorn.lilith.logback.appender.multiplex-classic</artifactId>
      <version>0.9.44</version>
      <scope>provided</scope>
    </dependency>
        
    <!-- end parent dependencies -->
            
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>optiq-avatica</artifactId>
      <version>0.9-drill-r20</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.drill.exec</groupId>
      <artifactId>drill-java-exec</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hbase</groupId>
          <artifactId>hbase</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-container-jetty-servlet</artifactId>
          <groupId>org.glassfish.jersey.containers</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-server</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-common</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-client</artifactId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-media-multipart</artifactId>
          <groupId>org.glassfish.jersey.media</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-mvc-freemarker</artifactId>
          <groupId>org.glassfish.jersey.ext</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-servlet</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>parquet-hadoop</artifactId>
          <groupId>com.twitter</groupId>
        </exclusion>
        <exclusion>
          <artifactId>parquet-column</artifactId>
          <groupId>com.twitter</groupId>
        </exclusion>
        <exclusion>
          <artifactId>infinispan-core</artifactId>
          <groupId>org.infinispan</groupId>
        </exclusion>
        <exclusion>
          <artifactId>asm-util</artifactId>
          <groupId>org.ow2.asm</groupId>
        </exclusion>
        <exclusion>
          <artifactId>codemodel</artifactId>
          <groupId>com.sun.codemodel</groupId>
        </exclusion>
        <exclusion>
          <artifactId>asm-commons</artifactId>
          <groupId>org.ow2.asm</groupId>
        </exclusion>
        <exclusion>
          <artifactId>infinispan-tree</artifactId>
          <groupId>org.infinispan</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-util</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>freemarker</artifactId>
          <groupId>org.freemarker</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hazelcast</artifactId>
          <groupId>com.hazelcast</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-compiler-jdk</artifactId>
          <groupId>org.codehaus.janino</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.drill</groupId>
      <artifactId>drill-common</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>javassist</artifactId>
          <groupId>javassist</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.drill.exec</groupId>
      <artifactId>drill-jdbc</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <artifactId>drill-storage-hive-core</artifactId>
          <groupId>org.apache.drill.contrib.storage-hive</groupId>
        </exclusion>
        <exclusion>
          <artifactId>foodmart-data-json</artifactId>
          <groupId>net.hydromatic</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>2.6.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- Specify xalan and xerces versions to avoid setXIncludeAware error. -->
    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>xalan</groupId>
      <artifactId>xalan</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.13</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.0.13</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>com.github.wvengen</groupId>
        <artifactId>proguard-maven-plugin</artifactId>
        <version>2.0.7</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>proguard</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>net.sf.proguard</groupId>
            <artifactId>proguard-base</artifactId>
            <version>5.0</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
        <configuration>
          <proguardVersion>5.0</proguardVersion>
          <obfuscate>false</obfuscate>
          <includeDependencyInjar>true</includeDependencyInjar>
          <outjar>${project.build.finalName}-dirty.jar</outjar>
          <outputDirectory>${project.build.directory}</outputDirectory>
          <maxMemory>6g</maxMemory>
          <options>
            <option>-dontobfuscate</option>
            <option>-dontoptimize</option>
            <option>-ignorewarnings</option>
            <!-- CHECK THESE AGAINST OLDER MASTER    -->
            <option>-keep class org.apache.drill.exec.proto.** { *; }</option>
            <option>-keep class org.apache.drill.common.types.** { *; }</option>
            <!-- Entry point:  Drill JDBC driver main class: -->
            <option>-keep class org.apache.drill.jdbc.Driver { *; }</option>
            <!-- Unclear why "-keep" needed:  Drill-specific subinterfaces of
                 JDBC-defined interfaces, defining Drill extension methods  -->
            <option>-keep class org.apache.drill.jdbc.DrillConnection { *; }</option>
            <option>-keep class org.apache.drill.jdbc.DrillDatabaseMetaData { *; }</option>
            <option>-keep class org.apache.drill.jdbc.DrillPreparedStatement { *; }</option>
            <option>-keep class org.apache.drill.jdbc.DrillStatement { *; }</option>
            <option>-keep class org.apache.drill.jdbc.DrillResultSet { *; }</option>
            <!-- Dynamically accessed JDBC-module classes: -->
            <option>-keep class org.apache.drill.jdbc.impl.DrillJdbc40Factory { *; }</option>
            <option>-keep class org.apache.drill.jdbc.impl.DrillJdbc41Factory { *; }</option>

            <!-- Entry point: Drill JDBC tracing proxing JDBC driver main class: -->
            <option>-keep class org.apache.drill.jdbc.proxy.TracingProxyDriver { *; }</option>
            <option>-keep class org.apache.drill.common.config.CommonConstants { *; }</option>
            <option>-keep class org.apache.drill.common.config.ConfigProvider { *; }</option>
            <option>-keep class org.apache.drill.common.config.DrillConfig { *; }</option>
            <option>-keep class org.apache.drill.common.config.NestedConfig { *; }</option>

            <option>-keep class ch.qos.logback.** { *; }</option>
            <option>-keep class org.slf4j.** { *; }</option>
            <option>-keep class * implements com.fasterxml.jackson.databind.cfg.ConfigFeature { *; }</option>
            <option>-keep class * implements com.fasterxml.jackson.databind.jsontype.TypeIdResolver { *; }</option>
            <!-- do not mess with enums, Java doesn't like it -->
            <option>-keep enum ** { *; }</option>
          </options>
          <exclusions>
            <exclusion>
              <groupId>org.slf4j</groupId>
              <artifactId>jcl-over-slf4j</artifactId>
            </exclusion>
            <exclusion>
              <groupId>net.hydromatic</groupId>
              <artifactId>eigenbase-properties</artifactId>
            </exclusion>
          </exclusions>
          <libs>
            <lib>${java.home}/lib/rt.jar</lib>
            <lib>${java.home}/lib/jsse.jar</lib>
          </libs>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <target>
                <delete dir="${project.build.directory}/dirty"/>
                <mkdir dir="${project.build.directory}/dirty"/>
                <unzip src="${project.build.directory}/${project.build.finalName}-dirty.jar" dest="${project.build.directory}/dirty">
                  <patternset>
                    <exclude name="**/*.java"/>
                    <exclude name="org.codehaus.commons.compiler.properties"/> <!-- This leads jad-ui to not parse classes under 'org/' -->
                    <exclude name="**/*.SF"/>
                    <exclude name="**/*.RSA"/>
                    <exclude name="**/*.DSA"/>
                    <exclude name="META-INF/services/*"/>
                    <exclude name="META-INF/*.SF"/>
                    <exclude name="META-INF/*.RSA"/>
                    <exclude name="META-INF/*.DSA"/>
                  </patternset>
                </unzip>
                <jar destfile="${project.build.directory}/${project.build.finalName}.jar" basedir="${project.build.directory}/dirty"/>
                <delete dir="${project.build.directory}/dirty"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <!-- Default to including everything and excluding nothing since we're shading
                     the ProGuard-trimmed Jar file. -->
              </artifactSet>
	      <!--
                  <!- -  ???: COPIED, PASTED, BUT NOT EDITED: - - >
              <createDependencyReducedPom>false</createDependencyReducedPom>
                  <!- -  ???: COPIED, PASTED, BUT NOT EDITED: - - >
              <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
	      -->
              <relocations>
                <!-- 
                  Notes:  
                  - <exclude> syntax is not (currently) documented.  Apparently,
                    p1.p2.** refers to everything in packages below p1.p2.  It's
                    not clear if it also classes(etc.) immediately within p1.p2.  
                  - <pattern></pattern> matches everything (including references
                    to classes that are not in the input, such as
                    java.lang.Object).
                  - Trying to match everything and then exclude external things
                    (starting with java.**) and Drill leads to non-obvious errors.
                    (E.g., Avatica's detection of JDBC version using 
                    Class.forName(...) gets wrong answer - even with ???.)
                -->
                <relocation>
		  <!-- for ch.qos.logback: -->
                  <pattern>??DISABLE??ch.</pattern>
                  <shadedPattern>sHaDeD.ch.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for codegen... (Calcite-related files?): -->
                  <pattern>??DISABLE??codegen.</pattern>
                  <shadedPattern>sHaDeD.codegen.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for com.carrotsearch...,
                           com.codahale.metrics...,
                           com.dyuproject.protostuff,
                           com.fasterxml.jackson...,
                           com.google.common...,
                           com.google.protobuf,
                           com.thoughtworks/paranamer,
                           com.typesafe.config...,
                           com.univocity.parsers.common.processor.RowPlacement.class: -->
                  <pattern>??DISABLE??com.</pattern>
                  <shadedPattern>sHaDeD.com.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for de.huxhorn.lilith: -->
                  <pattern>??DISABLE??de.</pattern>
                  <shadedPattern>sHaDeD.de.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for io.netty...: -->
                  <pattern>??DISABLE??io.</pattern>
                  <shadedPattern>sHaDeD.io.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for javacc/Parser.jj: -->
                  <pattern>??DISABLE??javacc.</pattern>
                  <shadedPattern>sHaDeD.javacc.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for javassist...: -->
                  <pattern>??DISABLE??javassist.</pattern>
                  <shadedPattern>sHaDeD.javassist.</shadedPattern>
                </relocation>

                <relocation>
		  <!-- for javax.inject: -->
                  <pattern>??DISABLE??javax.inject</pattern>
                  <shadedPattern>sHaDeD.javax.inject</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for javax.validation...: -->
                  <pattern>??DISABLE??javax.validation</pattern>
                  <shadedPattern>sHaDeD.javax.validation</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for javax.xml.parsers: -->
                  <pattern>??DISABLE??javax.xml.parsers</pattern>
                  <shadedPattern>sHaDeD.javax.xml.parsers</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for jline...: -->
                  <pattern>??DISABLE??jline.</pattern>
                  <shadedPattern>sHaDeD.jline.</shadedPattern>
                </relocation>

                <relocation>
		  <!-- for net.hydromatic.avatica,
                           net.hydromatic.linq4: -->
                  <pattern>??DISABLE??net.</pattern>
                  <shadedPattern>sHaDeD.net.</shadedPattern>
                </relocation>

                <relocation>
                  <pattern>??DISABLE??org.</pattern>
                  <shadedPattern>sHaDeD.org.</shadedPattern>
                  <excludes>
                    <exclude>org.apache.drill.**</exclude>
                    <exclude>org.ietf.**</exclude>
                  </excludes>
                </relocation>

                <relocation>
		  <!-- for parquet...: -->
                  <pattern>??DISABLE??parquet.</pattern>
                  <shadedPattern>sHaDeD.parquet.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for rest...: -->
                  <pattern>??DISABLE??rest.</pattern>
                  <shadedPattern>sHaDeD.rest.</shadedPattern>
                </relocation>
                <relocation>
		  <!-- for trax/trax.properties: -->
                  <pattern>??DISABLE??trax</pattern>
                  <shadedPattern>sHaDeD.trax.</shadedPattern>
                </relocation>
              </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <pluginRepositories>
    <pluginRepository>
      <id>onejar-maven-plugin.googlecode.com</id>
      <url>http://onejar-maven-plugin.googlecode.com/svn/mavenrepo</url>
    </pluginRepository>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <!-- mondrian data includes 10s of MBs of JSON file
        if you want to include them run maven with -Pwith-mondrian-data -->
    <profile>
      <id>with-mondrian-data</id>
      <activation><activeByDefault>false</activeByDefault></activation>
      <dependencies>
        <dependency>
          <groupId>net.hydromatic</groupId>
          <artifactId>foodmart-queries</artifactId>
          <version>0.4.1</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>net.hydromatic</groupId>
          <artifactId>foodmart-data-json</artifactId>
          <version>0.4</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>default-hadoop</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <projectVersion>${project.version}</projectVersion>
      </properties>
    </profile>
    <profile>
      <id>mapr</id>
      <properties>
        <projectVersion>${project.version}-mapr</projectVersion>
      </properties>
    </profile>
    <profile>
      <id>cdh</id>
      <properties>
        <projectVersion>${project.version}-mapr</projectVersion>
      </properties>
    </profile>
    <profile>
      <id>hdp</id>
      <properties>
        <projectVersion>${project.version}-hdp</projectVersion>
      </properties>
    </profile>
  </profiles>

</project>
